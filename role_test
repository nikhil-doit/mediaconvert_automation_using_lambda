# getLinkDynamic
data "aws_iam_policy_document" "affiliate_ssm_policy_doc" {
  statement {
    actions = [
      "ssm:GetParameter",
      "kms:Decrypt",
    ]
    resources = ["*"]
    effect    = "Allow"
  }
}

resource "aws_iam_policy" "affiliate_ssm_policy" {
  name        = "affiliate-ssm-policy"
  description = "Affiliate ssm policy"
  policy      = data.aws_iam_policy_document.affiliate_ssm_policy_doc.json
}

resource "aws_iam_role" "getLinkDynamic_lambda_role" {
  assume_role_policy  = file("./policies_jsons/lambda_role_policy.json")
  name          = "getLinkDynamic_lambda_role"
  #managed_policy_arns = [
  #  "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
  #]
  tags = {
    name       = "lambda_convert_role",
    env        = "test"
    created_by = "terraform"
  }
}

resource "aws_iam_role_policy_attachment" "getLinkDynamic_lambda_execution_attachment" {
  role       = aws_iam_role.getLinkDynamic_lambda_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
}

resource "aws_iam_role_policy_attachment" "getLinkDynamic_lambda_policy_attachment" {
  role       = aws_iam_role.getLinkDynamic_lambda_role.name
  policy_arn = aws_iam_policy.affiliate_ssm_policy.arn
}

/*
resource "aws_iam_role_policy_attachment" "getLinkDynamic_lambda_execution_policy_attachment" {
  for_each = toset([
    aws_iam_policy.affiliate_ssm_policy.arn,
    aws_iam_policy.affiliate_ssm_policy1.arn,
   ])
  role       = aws_iam_role.test-lambda-role.name
  policy_arn = each.value
}

*/

# SSM parameter resource
resource "aws_ssm_parameter" "example" {
  name  = "/my/parameter"
  type  = "String"
  value = "12345"

  # Allowed pattern for parameter value
  allowed_pattern = ".*"

  # Inline policy
  policy = jsonencode(
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "AWS": "aws_iam_role.getLinkDynamic_lambda_role.name"
      },
      "Action": "ssm:GetParameter",
      "Resource": "${aws_ssm_parameter.example.arn}"
    }
  ]
  })
}